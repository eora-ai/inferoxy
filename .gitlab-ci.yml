# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9

services:
  - docker:dind

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DOCKER_TLS_CERTDIR: ""

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - test
  - code-cov
  - build


tests:
  stage: test
  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
  script:
    - pytest bridge_config_parser
    - mypy bridge_config_parser
    - mypy zmq_bridge
    - pytest batch_manager
    - mypy batch_manager
    - pytest debatch_manager
    - mypy debatch_manager
    - pytest model_storage
    - mypy model_storage
    - pytest task_manager
    - mypy task_manager

coverage:
  stage: code-cov
  needs: 
    - tests
  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
  script:
    - ./entrypoint COVERAGE > public/coverage.txt
  artifacts:
    paths:
        - public/coverage.txt
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'

build_release_image:
  image: docker:latest
  stage: build
  before_script:
    - apk add --no-cache make
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $REGISTRY
  script:
    - export INFEROXY_VERSION=$CI_COMMIT_TAG
    - echo $INFEROXY_VERSION
    - make build
    - make push
  only:
    - tags
